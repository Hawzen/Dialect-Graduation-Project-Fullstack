{"version":3,"sources":["dialect/Welcome.js","dialect/GlobePlot.js","dialect/TestCase.js","dialect/TestCasesList.js","dialect/TabsTestCases.js","dialect/ControlPanel.js","dialect/Paragraphs.js","dialect/ModelsTabs.js","dialect/Credits.js","dialect/dialect.js"],"names":["theme","createMuiTheme","typography","h2","fontFamily","join","fontSize","h5","fontStyle","Welcome","Container","Typography","variant","align","gutterBottom","color","style","marginTop","Grid","container","justify","item","paragraph","Plot","lazy","GlobePlot","props","preds","useTheme","xs","useMediaQuery","breakpoints","down","sm","md","lg","size","width","height","fallback","data","type","locations","z","EGY","GLF","IRQ","LEV","NOR","text","zmax","zmin","colorscale","showscale","layout","margin","l","r","t","b","geo","projection","scale","center","lon","lat","config","displayModeBar","responsive","TestCase","onElementClick","ListItem","button","onClick","TestCasesList","testCases","handleInputChange","ThemeProvider","rtlTheme","dir","List","maxHeight","overflow","map","testCase","i","overrides","MuiTab","root","minWidth","egyptList","gulfList","iraqList","norList","levList","TabsTestCases","useState","value","setValue","inputChange","Paper","Box","sx","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","a11yProps","axis","direction","index","onChangeIndex","TabPanel","children","other","role","hidden","id","aria-labelledby","p","useStyles","makeStyles","display","alignItems","wrapper","spacing","position","buttonSuccess","backgroundColor","green","buttonProgress","top","left","marginLeft","ControlPanel","model","success","loading","setText","fetchApi","setSuccess","setLoading","modelTabs","classes","buttonClassname","clsx","handleButtonClick","length","handleClickEvent","e","code","preventDefault","useEffect","window","addEventListener","removeEventListener","TextField","target","placeholder","helperText","fullWidth","marginBottom","justifyContent","className","Button","disabled","CircularProgress","h4","Paragraphs","Divider","orientation","href","flexDirection","ModelsTabs","setModel","square","aria-label","Credits","jss","create","plugins","jssPreset","rtl","Dialect","setPreds","n","modelsArr","$","ajax","url","JSON","stringify","dataType","response","error","err","console","log","StylesProvider","fixed","flexWrap","Item","padding"],"mappings":"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","file":"static/js/5.51e610fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Container, Grid,Typography,createMuiTheme,MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h2:{\r\n        fontFamily: [\r\n        'Merriweather',\r\n        // 'monospace',\r\n        // 'roboto',\r\n        // 'sans-serif'\r\n        ].join(','),\r\n         '@media (max-width:600px)': {\r\n    fontSize: '3.3rem',\r\n  },\r\n         '@media (max-width:500px)': {\r\n    fontSize: '2.3rem',\r\n  },\r\n    },         h5:{\r\n        fontFamily: [\r\n\r\n        'Merriweather',\r\n        // 'monospace',\r\n        // 'roboto',\r\n        // 'sans-serif'\r\n        ].join(','),\r\n        fontStyle:'italic'\r\n    \r\n    },\r\n\r\n}});\r\n\r\nexport default function Welcome() {\r\n    return (\r\n\r\n    <MuiThemeProvider theme={theme}>\r\n        <Container >\r\n            <Typography variant=\"h2\" align=\"center\" gutterBottom color=\"textPrimary\" style={{marginTop: '60px'}}>\r\n                {/* <mark style={{backgroundColor: \"rgba(255, 229, 82, 0.1)\"}}>Arabic Dialect Classification</mark> */}\r\n                Arabic Dialect Classification\r\n            </Typography> \r\n            <Grid container style={{marginTop: '2rem'}} justify=\"center\">\r\n                \r\n                <Grid item> <Typography variant=\"h5\" align=\"center\" paragraph color=\"textPrimary\">\r\n                Classifying Arabic text based on its dialect.\r\n                </Typography> </Grid>\r\n            </Grid>\r\n        </Container>\r\n    </MuiThemeProvider>\r\n    )\r\n}","import { React,lazy, Suspense } from \"react\";\r\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\r\n\r\n\r\nconst Plot = lazy(() => import(\"react-plotly.js\"));\r\n\r\nexport default function GlobePlot(props){\r\n    const preds = props.preds\r\n\r\n    const theme = useTheme();\r\n    const xs = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n    const sm = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const md = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n    const lg = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n    const xl = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n    \r\n    const size = () => {\r\n        if (xs)\r\n            return {width: 300, height: 150}\r\n        else if (sm)\r\n            return {width: 500, height: 250}\r\n        else if (md)\r\n            return {width: 700, height: 350}    \r\n        else if (lg)\r\n            return {width: 900, height: 450}        \r\n        else if (xl)\r\n            return {width: 1000, height: 500};\r\n        else\r\n            return {width: 1000, height: 500};\r\n    }\r\n    // alert(xs || sm || md || lg || xl)\r\n    return (\r\n        // SORRY FOR SHIT CODE\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n\r\n            <Plot\r\n                data={[\r\n                    {\r\n                    type: 'choropleth',\r\n                    locations: [\"EGY\", // Egypt\r\n                                \"SAU\", \"KWT\", \"QAT\", \"ARE\", \"BHR\", \"OMN\", // GLF\r\n                                \"IRQ\", // IRQ\r\n                                \"SYR\", \"PSE\", \"JOR\", // LEV\r\n                                \"MAR\", \"DZA\", \"LBY\", \"TUN\"], // NOR\r\n                    z: [preds.EGY, \r\n                        preds.GLF, preds.GLF, preds.GLF, preds.GLF, preds.GLF, preds.GLF,\r\n                        preds.IRQ,\r\n                        preds.LEV, preds.LEV, preds.LEV,\r\n                        preds.NOR, preds.NOR, preds.NOR, preds.NOR],\r\n                    text: \"Probability\",\r\n                    zmax: 1,\r\n                    zmin: 0,\r\n                    colorscale: \"Reds\",\r\n                    showscale: false,\r\n                    }\r\n                ]}\r\n                layout={\r\n                    {\r\n                        // title: \"Drawing\",\r\n                        width: size().width,\r\n                        height: size().height,\r\n                        margin: {\r\n                            l: 0,\r\n                            r: 0, \r\n                            t: 0,\r\n                            b: 0,\r\n                        },\r\n                        geo: {\r\n                            projection: {\r\n                                scale: 4.25,\r\n                                type: \"robinson\",   \r\n                            },  \r\n                            center: {\r\n                                    lon: 22,\r\n                                    lat: 30,\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                config={{\r\n                    displayModeBar: false,\r\n                    responsive: true,\r\n                }}\r\n                \r\n            />\r\n        </Suspense>\r\n        // END SHIT CODE\r\n    )    \r\n}\r\n\r\n","import React from 'react'\r\nimport ListItemButton from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItem\"\r\nimport {ListItem} from '@material-ui/core'\r\n\r\n\r\nexport default function TestCase({text,onElementClick}) {\r\n    const handleClick = () =>{\r\n        onElementClick(text);\r\n    }\r\n    return (\r\n\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemButton>\r\n                <ListItemText style={{fontSize:\"1.4rem\", color:\"#616161\"}}>\r\n                    {text}\r\n                </ListItemText>\r\n            </ListItemButton>\r\n          </ListItem>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport TestCase from './TestCase'\r\n\r\nimport { \r\n    ThemeProvider, \r\n    List\r\n\r\n } from \"@material-ui/core\";\r\nimport { rtlTheme } from './ControlPanel';\r\n\r\n// Change test cases\r\nexport default function TestCasesList({\r\n    testCases,handleInputChange\r\n}) {\r\n    function onElementClick(text){\r\n        handleInputChange(text)\r\n    }\r\n    \r\n\r\n    return (\r\n                <ThemeProvider theme={rtlTheme}> \r\n                 <div dir=\"rtl\">\r\n            <List  style={{color:\"black\",width:'100%',maxHeight:300,overflow:'auto'}} >\r\n            {testCases.map((testCase,i)=>(\r\n                <TestCase text={testCase} onElementClick={onElementClick}/>\r\n            )\r\n            )}\r\n\r\n            </List>\r\n            </div>\r\n            </ThemeProvider> \r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport {Paper, Box,Typography,Tabs,Tab,createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport TestCasesList from './TestCasesList'\r\nlet theme = createMuiTheme({});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiTab: {\r\n      root: {\r\n         minWidth: 0,\r\n        '@media (min-width: 0px)': {\r\n          minWidth: 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst egyptList = [\"انا ابص يمين وشمال ومش فاهم\",'ازيك النهاردة','الزمالك فريق جامد أوي','يا عم ريح بالك يا عم',\"عاوز اعمل اي حاقة\"]\r\nconst gulfList = ['وشرايك نقوم نطلع بدل ما انت قاعد تسذا؟','يا رجال، اسحب عليه ما عنده سالفة','وش كنت قاعد تحوس فيه؟',\"ما قصرت يبو فهد, كفيت ووفيت\",\"تراك طولت علينا وينك\"]\r\nconst iraqList = [' مرات من نحجي الصدق نطلع صدق مو خوش','رحنه وكت الجاي جفي عالأربيل',\"ضعنه وضاعت اللمه وكلمن منتهي بهمه\",\"دخيل عيونج شكد بينهن سوالف\"]\r\nconst norList = ['صعيبة واش عطاتو','حنا بحال بحال  كنربحو كنخسرو مادمنا خاوة خاوة','وقعات احداث الى يومنا هذا مفهمناش علاش مربحناش اللقب',\" الحساب حسابي وماقدراتش ندخله\",\"وينتا تردنا الديون تاع القمح لي كانت تديه\"]\r\nconst levList = ['شو فيك زعلان؟','ما اسدئ انه اخي عاد من حلب','هسا بشوفلك اياه',\"شو بدك احكيله؟\",\"لحد اليوم ما عمري شفت زلمة متله\"]\r\n\r\nexport default function TabsTestCases({handleInputChange}) {\r\n  // const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n    function inputChange(text){\r\n        handleInputChange(text)\r\n    }\r\n    \r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    // <Box sx={{ bgcolor: 'background.paper', width: 500 }}>\r\n    <MuiThemeProvider theme={theme}>\r\n\r\n     <Paper>\r\n     <Box sx={{ width: '100%' }}>\r\n       {/* <Box sx={{ borderBottom: 1, borderColor: 'divider' }}></Box> */}\r\n\r\n      {/* <AppBar position=\"static\"> */}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          centered\r\n        >\r\n          <Tab label=\"ALL\" {...a11yProps(0)} />\r\n          <Tab label=\"GLF\" {...a11yProps(1)} />\r\n          <Tab label=\"EGY\" {...a11yProps(2)} />\r\n          <Tab label=\"IRQ\" {...a11yProps(3)} />\r\n          <Tab label=\"LEV\" {...a11yProps(4)} />\r\n          <Tab label=\"NOR\" {...a11yProps(5)} />\r\n        </Tabs>\r\n      {/* </AppBar> */}\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={[...gulfList,...egyptList,...iraqList,...levList,...norList]}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={gulfList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={egyptList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={iraqList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={4} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={levList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={5} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={norList}/>\r\n        </TabPanel>\r\n\r\n      </SwipeableViews>\r\n    </Box>\r\n    </Paper>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 6 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n","import { React,useEffect} from \"react\"; \r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Button,Grid, TextField,  ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport TabsTestCases from './TabsTestCases';\r\nconst rtlTheme = createMuiTheme({direction: 'rtl', });\r\nexport {rtlTheme}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    \r\n    wrapper: {\r\n      margin: theme.spacing(1),\r\n      position: 'relative',\r\n    },\r\n    buttonSuccess: {\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n    // fabProgress: {\r\n    //   color: green[500],\r\n    //   position: 'absolute',\r\n    //   top: -6,\r\n    //   left: -6,\r\n    //   zIndex: 1,\r\n    // },\r\n    buttonProgress: {\r\n      color: green[500],\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginTop: -12,\r\n      marginLeft: -12,\r\n    },\r\n  }));\r\n\r\nexport default function ControlPanel({text,model,success,loading,setText,fetchApi,setSuccess,setLoading, modelTabs}){\r\n\r\n    //style\r\n    const classes = useStyles()\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n      });\r\n\r\n    const handleInputChange = (text)=>{\r\n        setText(text)\r\n    }\r\n\r\n    const handleButtonClick = () => {\r\n      if(text.length === 0) return\r\n            if (!loading) {\r\n              setSuccess(false);\r\n              setLoading(true);\r\n              fetchApi(model);\r\n             \r\n            }\r\n          };\r\n\r\n    const handleClickEvent = (e)=>{\r\n           if(e.code === \"Enter\" || e.code === \"NumpadEnter\"){\r\n             handleButtonClick();\r\n             e.preventDefault();\r\n    }\r\n  }\r\n    useEffect(() => {\r\n      window.addEventListener(\"keydown\",handleClickEvent);\r\n      return () => { \r\n        window.removeEventListener('keydown', handleClickEvent);\r\n      };\r\n  }, [handleClickEvent]);\r\n      \r\n    return (\r\n         <Grid container direction=\"column\" justify=\"flex-end\" alignItems=\"stretch\" >\r\n\r\n            <Grid item >\r\n                <ThemeProvider theme={rtlTheme}>\r\n                <div dir=\"rtl\">\r\n                <TextField\r\n                    onChange={e => setText(e.target.value)}\r\n                    value={text}\r\n                    label=\"Predict Region\"\r\n                    style={{width: \"auto\", display: \"block\"}}\r\n                    placeholder=\"اهلا وسهلا\"\r\n                    helperText=\"Enter text in Arabic\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                </div>\r\n                </ThemeProvider>\r\n            </Grid>\r\n            {modelTabs}\r\n            <Grid item style={{marginBottom:'1rem',display:'flex',justifyContent:\"space-between\"}}  >\r\n                <Container className={classes.root} style={{justifyContent:\"center\"}}>\r\n                <div className={classes.wrapper}>\r\n                   <Button onClick={handleButtonClick} variant=\"contained\" color=\"primary\" disabled={loading}  className={buttonClassname}>\r\n                     Send\r\n                    </Button>\r\n                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                </div>\r\n                </Container>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <TabsTestCases handleInputChange={handleInputChange} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}","import React from 'react'\r\nimport {Divider, Paper, createMuiTheme,MuiThemeProvider,Container, Grid,Typography} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h4:{\r\n        fontFamily: [\r\n        'Oswald',\r\n        'roboto',\r\n        'sans-serif'\r\n        ].join(','),\r\n    },\r\n    //     h5:{\r\n    //     fontFamily: [\r\n\r\n    //     // 'monospace',\r\n    //     // 'roboto',\r\n    //     // 'sans-serif'\r\n    //     ].join(','),\r\n    // },\r\n\r\n}});\r\n\r\n\r\nexport default function Paragraphs() {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n\r\n        <Container>\r\n\r\n        \r\n        {/* <Paper > */}\r\n        <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2rem'}}>Summary</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    Using the <a href=\"https://aclanthology.org/W19-5607.pdf\">Social Media Arabic Dialect Corpus (SMADC)</a> dataset which is distributed in the five labels (GLF, EGY, NOR, LEV and IRQ), \r\n                    we fine tuned a number of models, including a BERT model and a Naive Bayes model. We mainly fine-tuned <a href=\"https://github.com/aub-mind/arabert\">AraBERT</a> models.\r\n                    We tested our model using a number of additional datasets, for more info read the research paper <a href=\"https://www.example.com\">here</a>.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container>\r\n\r\n        {/* <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2rem'}}>Paper</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    You can browse the research paper <a href=\"https://www.example.com\"> here</a>.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container>\r\n        \r\n       <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2.5rem'}}>Models</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n             \r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    We mainly fine-tuned <a href=\"https://github.com/aub-mind/arabert\">AraBERT</a> models.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container>\r\n\r\n        <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2.5rem'}}>Data</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    Using the <a href=\"https://aclanthology.org/W19-5607.pdf\">Social Media Arabic Dialect Corpus (SMADC)</a> dataset which is distributed in the five labels (GLF, EGY, NOR, LEV and IRQ), \r\n                    we fine tuned a number of models, including a BERT model and a Naive Bayes model. \r\n                    We tested our model using a number of additional datasets, for more info read the paper linked above.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container> */}\r\n\r\n            {/* </Paper> */}\r\n\r\n        </Container>\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport {Paper,Tab,Tabs,makeStyles,createMuiTheme,MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h4:{\r\n        fontFamily: [\r\n        'oswald',\r\n        'roboto',\r\n        'sans-serif'\r\n        ].join(','),\r\n        fontSize:'2.5rem'\r\n    },\r\n}});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ModelsTabs({setModel,fetchApi}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  // const handleClick = (n)=> {\r\n\r\n  // }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    // setModel(newValue);\r\n    fetchApi(newValue);\r\n\r\n  };\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n\r\n    <div className={classes.root}>\r\n       <Paper square>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        aria-label=\"Models options\"\r\n      >\r\n        <Tab label=\"BERT\" />\r\n        <Tab label=\"BAYES\"/>\r\n      </Tabs>\r\n    </Paper>\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","import {Divider, Paper, createMuiTheme,MuiThemeProvider,Container, Grid,Typography} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n          h4:{\r\n          fontFamily: [\r\n          'Oswald',\r\n          'roboto',\r\n          'sans-serif'\r\n          ].join(','),\r\n      },\r\n      //     h5:{\r\n      //     fontFamily: [\r\n  \r\n      //     // 'monospace',\r\n      //     // 'roboto',\r\n      //     // 'sans-serif'\r\n      //     ].join(','),\r\n      // },\r\n  \r\n  }});\r\n  \r\n\r\nexport default function Credits(){\r\n    return <div/>\r\n    return (\r\n    <MuiThemeProvider theme={theme}>\r\n        <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '6rem'}}>Source Code</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n            \r\n            <Grid item > \r\n                <Container flex>\r\n                    <Typography variant=\"h4\" align=\"left\" paragraph color=\"textSecondary\" >Something</Typography>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n        </Container>\r\n    </MuiThemeProvider>\r\n    )\r\n\r\n} ","import $ from 'jquery'\r\nimport { \r\n    Grid, \r\n    StylesProvider, \r\n    jssPreset, \r\n    Container,\r\n    Typography\r\n } from \"@material-ui/core\";\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { useState } from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport GlobePlot from \"./GlobePlot\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport Paragraphs from \"./Paragraphs\";\r\nimport ModelsTabs from \"./ModelsTabs\";\r\nimport Credits from \"./Credits\"\r\n\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\n\r\nexport default function Dialect(){\r\n    let [preds, setPreds] = useState({GLF: 0, EGY: 0, IRQ: 0, LEV: 0, NOR: 0})\r\n    let [model,setModel] = useState(0);\r\n    let [text,setText] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchApi = (n) =>{\r\n        setModel(n);\r\n        if(text.length===0) return\r\n\r\n        const bertApi = \"https://us-central1-dialect-project-328413.cloudfunctions.net/dialect-prediction-BERT\"\r\n        const bayesApi = \"https://us-central1-dialect-project-328413.cloudfunctions.net/dialect-prediction-naive-bayes\"\r\n\r\n        const modelsArr = [bertApi,bayesApi]\r\n\r\n        $.ajax(\r\n            {\r\n                type: \"POST\",\r\n                url: modelsArr[n],\r\n                data: JSON.stringify({\"text\" : text}),\r\n                dataType:'json',\r\n                success: function (response) {\r\n                    setSuccess(true);\r\n                    setLoading(false);\r\n                    // In backend: `id2label = {0 : \"EGY\", 1 : \"GLF\", 2 : \"IRQ\", 3 : \"LEV\", 4 : \"NOR\"}`\r\n                    setPreds({GLF: response[1], EGY: response[0], IRQ: response[2], LEV: response[3], NOR: response[4]})\r\n                    },\r\n                error: function (err) {\r\n                    console.log(err);\r\n                },\r\n                });\r\n        }\r\n\r\n    return (\r\n\r\n          <StylesProvider jss={jss}>\r\n            {/* alignItems=\"stretch\" */}\r\n        <Container fixed>\r\n        <Grid container direction=\"column\" style={{flexWrap:\"nowrap\"}} >\r\n\r\n            <Grid Item>\r\n                <Welcome/>\r\n            </Grid>\r\n            \r\n            <Grid Item>\r\n                <Paragraphs/>\r\n            </Grid>\r\n            \r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom color=\"textPrimary\" style={{marginTop: '60px'}}>\r\n                LIVE DEMO\r\n            </Typography> \r\n            \r\n            <Grid item style={{margin: \"auto\", marginTop: \"0.9rem\"}}>\r\n                <GlobePlot preds={preds}/>\r\n            </Grid>\r\n            \r\n            <Grid item>\r\n                <ControlPanel model={model} \r\n                text={text} \r\n                success={success} \r\n                loading={loading} \r\n                fetchApi={fetchApi} \r\n                setText={setText} \r\n                setSuccess={setSuccess} \r\n                setLoading={setLoading} \r\n                modelTabs={<ModelsTabs setModel={setModel} fetchApi={fetchApi} />}\r\n            />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <Credits/>\r\n            </Grid>\r\n\r\n            <div style={{padding: \"2em\"}}/> {/* Footer */}\r\n\r\n\r\n        </Grid>\r\n        </Container>\r\n        </StylesProvider>\r\n\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}