{"version":3,"sources":["dialect/Welcome.js","dialect/GlobePlot.js","dialect/Paragraphs.js","dialect/ModelsTabs.js","dialect/dialect.js"],"names":["theme","createMuiTheme","typography","h2","fontFamily","join","h5","fontStyle","Welcome","Container","Typography","variant","align","gutterBottom","color","style","marginTop","Grid","container","justify","item","paragraph","Plot","lazy","GlobePlot","props","preds","useTheme","xs","useMediaQuery","breakpoints","down","sm","md","lg","size","width","height","fallback","data","type","locations","z","EGY","GLF","IRQ","LEV","NOR","text","zmax","zmin","colorscale","showscale","layout","margin","l","r","t","b","geo","projection","scale","center","lon","lat","config","displayModeBar","responsive","h4","Paragraphs","fontSize","useStyles","makeStyles","root","display","flexDirection","alignItems","spacing","ModelsTabs","setModel","classes","useState","value","setValue","handleClick","n","console","log","this","className","Paper","square","Tabs","indicatorColor","textColor","onChange","event","newValue","aria-label","Tab","label","onClick","jss","create","plugins","jssPreset","rtl","Dialect","setPreds","model","StylesProvider","fixed","direction","flexWrap","Item","ControlPanel"],"mappings":"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","file":"static/js/5.08969f1c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Box,Container, Grid,Typography,createMuiTheme,MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h2:{\r\n        fontFamily: [\r\n        'monospace',\r\n        'roboto',\r\n        'sans-serif'\r\n        ].join(','),\r\n    },\r\n        h5:{\r\n        fontFamily: [\r\n\r\n            'Merriweather'\r\n        // 'monospace',\r\n        // 'roboto',\r\n        // 'sans-serif'\r\n        ].join(','),\r\n        fontStyle:'italic'\r\n    \r\n    },\r\n\r\n}});\r\n\r\nexport default function Welcome() {\r\n    return (\r\n\r\n        <MuiThemeProvider theme={theme}>\r\n        <Container >\r\n            <Typography variant=\"h2\" align=\"center\" gutterBottom color=\"textPrimary\" style={{marginTop: '60px'}}>\r\n                DIALECT CLASSIFICATION\r\n                </Typography> \r\n        <Grid container style={{marginTop: '2rem'}} justify=\"center\">\r\n             \r\n            <Grid item> <Typography variant=\"h5\" align=\"center\" paragraph color=\"textPrimary\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam fringilla feugiat massa. In mollis lobortis lorem, quis pretium sapien imperdiet nec. Integer ipsum massa, placerat eu leo sit amet, convallis aliquam enim. Quisque consectetur tellus.\r\n            </Typography> </Grid>\r\n            {/* <Grid item md={6}> <Typography variant=\"h5\" align=\"center\" paragraph color=\"textSecondary\">\r\n                .هناك حقيقة مثبتة منذ زمن طويل وهي أن المحتوى المقروء لصفحة ما سيلهي القارئ عن التركيز على الشكل الخارجي للنص أو شكل توضع الفقرات في الصفحة التي يقرأها. ولذلك يتم استخدام طريقة لوريم إيبسوم لأنها تعطي توزيعاَ طبيعياَ\r\n\r\n                </Typography> </Grid> */}\r\n        </Grid>\r\n       </Container>\r\n        </MuiThemeProvider>\r\n    )\r\n}","import { React,lazy, Suspense } from \"react\";\r\nimport {Typography ,useMediaQuery, useTheme,MuiThemeProvider,createMuiTheme} from \"@material-ui/core\";\r\n\r\n\r\nconst Plot = lazy(() => import(\"react-plotly.js\"));\r\n\r\nexport default function GlobePlot(props){\r\n    const preds = props.preds\r\n\r\n    const theme = useTheme();\r\n    const xs = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n    const sm = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const md = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n    const lg = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n    const xl = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n    \r\n    const size = () => {\r\n        if (xs)\r\n            return {width: 300, height: 150}\r\n        else if (sm)\r\n            return {width: 500, height: 250}\r\n        else if (md)\r\n            return {width: 700, height: 350}    \r\n        else if (lg)\r\n            return {width: 900, height: 450}        \r\n        else if (xl)\r\n            return {width: 1000, height: 500};\r\n        else\r\n            return {width: 1000, height: 500};\r\n    }\r\n    // alert(xs || sm || md || lg || xl)\r\n    return (\r\n        // SORRY FOR SHIT CODE\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n\r\n            <Plot\r\n                data={[\r\n                    {\r\n                    type: 'choropleth',\r\n                    locations: [\"EGY\", // Egypt\r\n                                \"SAU\", \"KWT\", \"QAT\", \"ARE\", \"BHR\", \"OMN\", // GLF\r\n                                \"IRQ\", // IRQ\r\n                                \"SYR\", \"PSE\", \"JOR\", // LEV\r\n                                \"MAR\", \"DZA\", \"LBY\", \"TUN\"], // NOR\r\n                    z: [preds.EGY, \r\n                        preds.GLF, preds.GLF, preds.GLF, preds.GLF, preds.GLF, preds.GLF,\r\n                        preds.IRQ,\r\n                        preds.LEV, preds.LEV, preds.LEV,\r\n                        preds.NOR, preds.NOR, preds.NOR, preds.NOR],\r\n                    text: \"SA\",\r\n                    zmax: 1,\r\n                    zmin: 0,\r\n                    colorscale: \"Reds\",\r\n                    showscale: false,\r\n                    }\r\n                ]}\r\n                layout={\r\n                    {\r\n                        // title: \"Drawing\",\r\n                        width: size().width,\r\n                        height: size().height,\r\n                        margin: {\r\n                            l: 0,\r\n                            r: 0, \r\n                            t: 0,\r\n                            b: 0,\r\n                        },\r\n                        geo: {\r\n                            projection: {\r\n                                scale: 4.25,\r\n                                type: \"robinson\",   \r\n                            },  \r\n                            center: {\r\n                                    lon: 22,\r\n                                    lat: 30,\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                config={{\r\n                    displayModeBar: false,\r\n                    responsive: true,\r\n                }}\r\n                \r\n            />\r\n        </Suspense>\r\n        // END SHIT CODE\r\n    )    \r\n}\r\n\r\n","import React from 'react'\r\nimport {createMuiTheme,MuiThemeProvider,Container, Grid,Typography} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h4:{\r\n        fontFamily: [\r\n        'Oswald',\r\n        'roboto',\r\n        'sans-serif'\r\n        ].join(','),\r\n    },\r\n    //     h5:{\r\n    //     fontFamily: [\r\n\r\n    //     // 'monospace',\r\n    //     // 'roboto',\r\n    //     // 'sans-serif'\r\n    //     ].join(','),\r\n    // },\r\n\r\n}});\r\n\r\n\r\nexport default function Paragraphs() {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n\r\n        <Container>\r\n\r\n        \r\n        <Container>\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '6rem'}}>Data Collection</Typography> \r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"center\">\r\n             \r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    We have used the Social Media Arabic Dialect Corpus(SMADC) dataset made by Areej Alshutayri and Eric Atwell.  The SMADC dataset contained 1,088,578 documents.  which consisted of 812,849 Facebook comments, 9,440 online newspaper comments, and 266,289 Twitter tweets.  And each one of them are distributed in the five labels (GLF, EGY, NOR, LEV and IRQ).\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container>\r\n\r\n        </Container>\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport {Paper,Tab,Tabs,makeStyles,createMuiTheme,MuiThemeProvider,Typography} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h4:{\r\n        fontFamily: [\r\n        'oswald',\r\n        'roboto',\r\n        'sans-serif'\r\n        ].join(','),\r\n        fontSize:'2.5rem'\r\n    },\r\n}});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ModelsTabs({setModel}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  function handleClick(n){\r\n    setModel(n);\r\n    console.log(this);\r\n\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom color=\"textPrimary\" style={{marginTop: '60px'}}>\r\n                LIVE DEMO\r\n                </Typography> \r\n    <div className={classes.root}>\r\n      \r\n\r\n      {/* <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n        <Button onClick={()=>setModel(0)}>BERT</Button>\r\n        <Button onClick={()=>setModel(1)}>BAYES</Button>\r\n      </ButtonGroup> */}\r\n       <Paper square>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        aria-label=\"\"\r\n      >\r\n        <Tab label=\"BERT\" onClick={()=>{handleClick(0)}} />\r\n        <Tab label=\"BAYES\" onClick={()=>{handleClick(1)}} />\r\n      </Tabs>\r\n    </Paper>\r\n      {/* <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup> */}\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","import { \r\n    Grid, \r\n    StylesProvider, \r\n    jssPreset, \r\n    Container\r\n } from \"@material-ui/core\";\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { useState } from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport GlobePlot from \"./GlobePlot\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport Paragraphs from \"./Paragraphs\";\r\nimport ModelsTabs from \"./ModelsTabs\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nexport default function Dialect(){\r\n    let [preds, setPreds] = useState({GLF: 0, EGY: 0, IRQ: 0, LEV: 0, NOR: 0})\r\n    let [model,setModel] = useState(0);\r\n    return (\r\n\r\n          <StylesProvider jss={jss}>\r\n            {/* alignItems=\"stretch\" */}\r\n        <Container fixed>\r\n        <Grid container direction=\"column\" style={{flexWrap:\"nowrap\"}} >\r\n\r\n            <Grid Item>\r\n                <Welcome/>\r\n            </Grid>\r\n            <Grid Item>\r\n                <Paragraphs/>\r\n            </Grid>\r\n            <Grid item>\r\n                <ModelsTabs setModel={setModel} />\r\n            </Grid>\r\n            \r\n            <Grid item style={{margin: \"auto\", marginTop: \"0.9rem\"}}>\r\n                <GlobePlot preds={preds}/>\r\n            </Grid>\r\n            <Grid item>\r\n                <ControlPanel setPreds={setPreds} model={model} />\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n        </Container>\r\n        </StylesProvider>\r\n\r\n    )\r\n}\r\n"],"sourceRoot":""}