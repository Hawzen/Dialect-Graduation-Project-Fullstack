{"version":3,"sources":["dialect/Welcome.js","dialect/GlobePlot.js","dialect/TestCase.js","dialect/TestCasesList.js","dialect/TabsTestCases.js","dialect/Feedback.js","dialect/ControlPanel.js","dialect/Paragraphs.js","dialect/ModelsTabs.js","dialect/CreditItem.js","dialect/DrawerContent.js","dialect/AppBar.js","dialect/dialect.js"],"names":["theme","createMuiTheme","typography","h2","fontFamily","join","fontSize","h5","fontStyle","Welcome","Container","Typography","variant","align","gutterBottom","color","style","marginTop","Grid","container","justify","item","paragraph","Plot","lazy","GlobePlot","props","preds","useTheme","xs","useMediaQuery","breakpoints","down","sm","md","lg","size","width","height","fallback","data","type","locations","z","EGY","GLF","IRQ","LEV","NOR","text","hovertext","name","zmax","zmin","showscale","layout","margin","l","r","t","b","geo","projection","scale","center","lon","lat","config","displayModeBar","responsive","TestCase","onElementClick","ListItem","button","onClick","TestCasesList","testCases","handleInputChange","ThemeProvider","rtlTheme","dir","List","maxHeight","overflow","map","testCase","i","overrides","MuiTab","root","minWidth","egyptList","gulfList","iraqList","norList","levList","TabsTestCases","useState","value","setValue","inputChange","Paper","Box","sx","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","a11yProps","axis","direction","index","onChangeIndex","TabPanel","children","other","role","hidden","id","aria-labelledby","p","Feedback","success","preds_array","Object","values","predicted_region","keys","reduce","x","y","postFeedback","actual_region","$","ajax","url","JSON","stringify","dataType","setAnswer","output","answer","marginLeft","ButtonGroup","aria-label","Button","console","log","justifyContent","alignItems","padding","useStyles","makeStyles","display","wrapper","spacing","position","buttonSuccess","backgroundColor","green","buttonProgress","top","left","ControlPanel","model","loading","setText","fetchApi","setSuccess","setLoading","modelTabs","classes","helperText","setHelperText","inputError","setInputError","buttonClassname","clsx","checkInputLength","length","handleButtonClick","handleClickEvent","e","code","preventDefault","useEffect","window","addEventListener","removeEventListener","timeoutId","setTimeout","clearTimeout","TextField","target","placeholder","fullWidth","error","marginBottom","className","disabled","CircularProgress","h4","Paragraphs","Divider","orientation","href","flexDirection","ModelsTabs","setModel","square","CreditItem","twt","gh","li","ListItemText","primary","maxWidth","minHeight","GithubIcon","LinkedInIcon","TwitterIcon","SvgIcon","d","useStyle","list","DrawerContent","textAlign","flexGrow","menuButton","marginRight","title","ButtonAppBar","open","setOpen","AppBar","background","boxShadow","Toolbar","IconButton","edge","SwipeableDrawer","anchor","onClose","onOpen","jss","create","plugins","jssPreset","rtl","Dialect","setPreds","retryCount","setRetryCount","n","modelsArr","response","err","location","reload","StylesProvider","fixed","flexWrap","Item"],"mappings":"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","file":"static/js/5.ac1107b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Container, Grid,Typography,createMuiTheme,MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h2:{\r\n        fontFamily: [\r\n        'Merriweather',\r\n        ].join(','),\r\n         '@media (max-width:600px)': {\r\n    fontSize: '3.3rem',\r\n  },\r\n         '@media (max-width:500px)': {\r\n    fontSize: '2.3rem',\r\n  },\r\n    },         h5:{\r\n        fontFamily: [\r\n\r\n        'Merriweather',\r\n        ].join(','),\r\n        fontStyle:'italic'\r\n    \r\n    },\r\n\r\n}});\r\n\r\nexport default function Welcome() {\r\n    return (\r\n\r\n    <MuiThemeProvider theme={theme}>\r\n        <Container >\r\n            <Typography variant=\"h2\" align=\"center\" gutterBottom color=\"textPrimary\" style={{marginTop: '60px'}}>\r\n                {/* <mark style={{backgroundColor: \"rgba(255, 229, 82, 0.1)\"}}>Arabic Dialect Classification</mark> */}\r\n                Arabic Dialect Classification\r\n            </Typography> \r\n            <Grid container style={{marginTop: '2rem'}} justify=\"center\">\r\n                \r\n                <Grid item> <Typography variant=\"h5\" align=\"center\" paragraph color=\"textPrimary\">\r\n                Classifying Arabic text based on its dialect.\r\n                </Typography> </Grid>\r\n            </Grid>\r\n        </Container>\r\n    </MuiThemeProvider>\r\n    )\r\n}","import { React,lazy, Suspense } from \"react\";\r\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\r\n\r\n\r\nconst Plot = lazy(() => import(\"react-plotly.js\"));\r\n\r\nexport default function GlobePlot(props){\r\n    const preds = props.preds\r\n\r\n    const theme = useTheme();\r\n    const xs = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n    const sm = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const md = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n    const lg = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n    const xl = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n    \r\n    const size = () => {\r\n        if (xs)\r\n            return {width: 300, height: 150}\r\n        else if (sm)\r\n            return {width: 500, height: 250}\r\n        else if (md)\r\n            return {width: 700, height: 350}    \r\n        else if (lg)\r\n            return {width: 900, height: 450}        \r\n        else if (xl)\r\n            return {width: 1000, height: 500};\r\n        else\r\n            return {width: 1000, height: 500};\r\n    }\r\n    // alert(xs || sm || md || lg || xl)\r\n    return (\r\n        // SORRY FOR SHIT CODE\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n\r\n            <Plot\r\n                data={[\r\n                    {\r\n                    type: 'choropleth',\r\n                    locations: [\"EGY\", // Egypt\r\n                                \"SAU\", \"KWT\", \"QAT\", \"ARE\", \"BHR\", // GLF\r\n                                \"IRQ\", // IRQ\r\n                                \"SYR\", \"PSE\", \"JOR\", // LEV\r\n                                \"MAR\", \"DZA\", \"LBY\", \"TUN\"], // NOR\r\n                    z: [preds.EGY, \r\n                        preds.GLF, preds.GLF, preds.GLF, preds.GLF, preds.GLF, \r\n                        preds.IRQ,\r\n                        preds.LEV, preds.LEV, preds.LEV,\r\n                        preds.NOR, preds.NOR, preds.NOR, preds.NOR],\r\n                    text: \"Probability\",\r\n                    hovertext: \r\n                        [\"Probability EGY\", // Egypt\r\n                        \"Probability GLF\", \"Probability GLF\", \"Probability GLF\", \"Probability GLF\", \"Probability GLF\", // GLF\r\n                        \"Probability IRQ\", // IRQ\r\n                        \"Probability LEV\", \"Probability LEV\", \"Probability LEV\", // LEV\r\n                        \"Probability NOR\", \"Probability NOR\", \"Probability NOR\", \"Probability NOR\"], // NOR,\r\n                    name: \"Classification probability\",\r\n                    zmax: 1,\r\n                    zmin: 0,\r\n                    // colorscale: \"default\",\r\n                    showscale: false,\r\n                    }\r\n                ]}\r\n                layout={\r\n                    {\r\n                        // title: \"Drawing\",\r\n                        width: size().width,\r\n                        height: size().height,\r\n                        margin: {\r\n                            l: 0,\r\n                            r: 0, \r\n                            t: 0,\r\n                            b: 0,\r\n                        },\r\n                        geo: {\r\n                            projection: {\r\n                                scale: 4.25,\r\n                                type: \"robinson\",   \r\n                            },  \r\n                            center: {\r\n                                    lon: 22,\r\n                                    lat: 30,\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                config={{\r\n                    displayModeBar: false,\r\n                    responsive: true,\r\n                }}\r\n                \r\n            />\r\n        </Suspense>\r\n        // END SHIT CODE\r\n    )    \r\n}\r\n\r\n","import React from 'react'\r\nimport ListItemButton from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItem\"\r\nimport {ListItem} from '@material-ui/core'\r\n\r\n\r\nexport default function TestCase({text,onElementClick}) {\r\n    const handleClick = () =>{\r\n        onElementClick(text);\r\n    }\r\n    return (\r\n\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemButton>\r\n                <ListItemText style={{fontSize:\"1.4rem\", color:\"#616161\"}}>\r\n                    {text}\r\n                </ListItemText>\r\n            </ListItemButton>\r\n          </ListItem>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport TestCase from './TestCase'\r\n\r\nimport { \r\n    ThemeProvider, \r\n    List\r\n\r\n } from \"@material-ui/core\";\r\nimport { rtlTheme } from './ControlPanel';\r\n\r\n// Change test cases\r\nexport default function TestCasesList({\r\n    testCases,handleInputChange\r\n}) {\r\n    function onElementClick(text){\r\n        handleInputChange(text)\r\n    }\r\n    \r\n\r\n    return (\r\n                <ThemeProvider theme={rtlTheme}> \r\n                 <div dir=\"rtl\">\r\n            <List  style={{color:\"black\",width:'100%',maxHeight:300,overflow:'auto'}} >\r\n            {testCases.map((testCase,i)=>(\r\n                <TestCase text={testCase} onElementClick={onElementClick}/>\r\n            )\r\n            )}\r\n\r\n            </List>\r\n            </div>\r\n            </ThemeProvider> \r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport {Paper, Box,Typography,Tabs,Tab,createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport TestCasesList from './TestCasesList'\r\nlet theme = createMuiTheme({});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiTab: {\r\n      root: {\r\n         minWidth: 0,\r\n        '@media (min-width: 0px)': {\r\n          minWidth: 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst egyptList = [\"انا ابص يمين وشمال ومش فاهم\",'ازيك النهاردة','الزمالك فريق جامد أوي','يا عم ريح بالك يا عم',\"عاوز اعمل اي حاقة\"]\r\nconst gulfList = ['وشرايك نقوم نطلع بدل ما انت قاعد تسذا؟','يا رجال، اسحب عليه ما عنده سالفة','وش كنت قاعد تحوس فيه؟',\"ما قصرت يبو فهد, كفيت ووفيت\",\"تراك طولت علينا وينك\"]\r\nconst iraqList = [' مرات من نحجي الصدق نطلع صدق مو خوش','رحنه وكت الجاي جفي عالأربيل',\"ضعنه وضاعت اللمه وكلمن منتهي بهمه\",\"دخيل عيونج شكد بينهن سوالف\"]\r\nconst norList = ['صعيبة واش عطاتو','حنا بحال بحال  كنربحو كنخسرو مادمنا خاوة خاوة','وقعات احداث الى يومنا هذا مفهمناش علاش مربحناش اللقب',\" الحساب حسابي وماقدراتش ندخله\",\"وينتا تردنا الديون تاع القمح لي كانت تديه\"]\r\nconst levList = ['شو فيك زعلان؟','ما اسدئ انه اخي عاد من حلب','هسا بشوفلك اياه',\"شو بدك احكيله؟\",\"لحد اليوم ما عمري شفت زلمة متله\"]\r\n\r\nexport default function TabsTestCases({handleInputChange}) {\r\n  // const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n    function inputChange(text){\r\n        handleInputChange(text)\r\n    }\r\n    \r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    // <Box sx={{ bgcolor: 'background.paper', width: 500 }}>\r\n    <MuiThemeProvider theme={theme}>\r\n\r\n     <Paper>\r\n     <Box sx={{ width: '100%' }}>\r\n       {/* <Box sx={{ borderBottom: 1, borderColor: 'divider' }}></Box> */}\r\n\r\n      {/* <AppBar position=\"static\"> */}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          centered\r\n        >\r\n          <Tab label=\"ALL\" {...a11yProps(0)} />\r\n          <Tab label=\"GLF\" {...a11yProps(1)} />\r\n          <Tab label=\"EGY\" {...a11yProps(2)} />\r\n          <Tab label=\"IRQ\" {...a11yProps(3)} />\r\n          <Tab label=\"LEV\" {...a11yProps(4)} />\r\n          <Tab label=\"NOR\" {...a11yProps(5)} />\r\n        </Tabs>\r\n      {/* </AppBar> */}\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={[...gulfList,...egyptList,...iraqList,...levList,...norList]}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={gulfList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={egyptList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={iraqList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={4} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={levList}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={5} dir={theme.direction}>\r\n          <TestCasesList handleInputChange={inputChange} testCases={norList}/>\r\n        </TabPanel>\r\n\r\n      </SwipeableViews>\r\n    </Box>\r\n    </Paper>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 6 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n","import {React,useState,Fragment} from 'react'\r\nimport {Grid, Button,ButtonGroup,Typography,createMuiTheme,MuiThemeProvider} from '@material-ui/core'\r\nimport $ from 'jquery'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n\r\n        h2:{\r\n        fontFamily: [\r\n        'Merriweather',\r\n        // 'monospace',\r\n        // 'roboto',\r\n        // 'sans-serif'\r\n        ].join(','),\r\n         '@media (max-width:600px)': {\r\n    fontSize: '3.3rem',\r\n  },\r\n         '@media (max-width:500px)': {\r\n    fontSize: '2.3rem',\r\n  },\r\n    },         h5:{\r\n        fontFamily: [\r\n\r\n        // 'Merriweather',\r\n        // 'monospace',\r\n        // 'roboto',\r\n        // 'sans-serif'\r\n        ].join(','),\r\n        // fontStyle:'italic'\r\n\r\n    },\r\n\r\n}});\r\n\r\nexport default function Feedback({text,preds,success}) {\r\n    let preds_array= Object.values(preds)\r\n    let predicted_region= Object.keys(preds).reduce((x,y)=> preds[x]>preds[y]? x : y)\r\n    function postFeedback(actual_region){\r\n        if(!success) return\r\n        $.ajax(\r\n            {\r\n                type: \"POST\",\r\n                url: 'https://us-central1-dialect-project-328413.cloudfunctions.net/save-feedback',\r\n                data: JSON.stringify({\"text\" : text, \"probs\":preds_array, \"predicted\":predicted_region, \"actual\":actual_region}),\r\n                dataType:'json',\r\n                \r\n                },\r\n            )\r\n         setAnswer(1);   \r\n        };\r\n    \r\n\r\n    \r\n    const [answer,setAnswer] = useState(0);\r\n    let output;\r\n    if(answer === 0)\r\n        output =\r\n            <Fragment>\r\n                <Grid item >\r\n                    <Typography color=\"textPrimary\" variant='h6' style={{marginLeft:\"1rem\"}}>\r\n                        Is the prediction correct?\r\n                    </Typography></Grid>\r\n                    <Grid item >\r\n                    <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\" style={{marginLeft:'3rem'}}>\r\n                        <Button onClick={()=>{setAnswer(1); console.log(answer)}}>Yes</Button>\r\n                        <Button onClick={()=>{setAnswer(2); console.log(answer)}}>No</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </Fragment>\r\n\r\n    else if(answer === 1) \r\n        output = \r\n            <Grid item>\r\n                <Typography color=\"textPrimary\"  variant='h6' style={{marginLeft:\"1rem\"}}>\r\n                Thank you for the feedback!\r\n                </Typography>\r\n            </Grid>\r\n        \r\n\r\n    else if(answer === 2) \r\n        output =\r\n            <Fragment>\r\n                <Grid item>\r\n                    <Typography color=\"textPrimary\"  variant='h6' style={{marginLeft:\"1rem\"}}>\r\n                        Which dialect does it belong to\r\n                    </Typography></Grid>\r\n                    <Grid item >\r\n                    <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\" style={{marginLeft:'3rem'}}>\r\n                    <Button onClick={()=>postFeedback('GLF')}>GLF</Button>\r\n                    <Button onClick={()=>postFeedback('EGY')}>EGY</Button>\r\n                    <Button onClick={()=>postFeedback('IRQ')}>IRQ</Button>\r\n                    <Button onClick={()=>postFeedback('LEV')}>LEV</Button>\r\n                    <Button onClick={()=>postFeedback('NOR')}>NOR</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </Fragment>\r\n\r\n    return(\r\n        <MuiThemeProvider theme={theme}>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\" style={{padding: \"1em\"}}>\r\n                {output}\r\n            </Grid> \r\n        </MuiThemeProvider> \r\n    )\r\n    \r\n    \r\n  \r\n\r\n}","import { React,useEffect, useState} from \"react\"; \r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Button,Grid, TextField,  ThemeProvider, createMuiTheme, Radio, FormControlLabel, FormControl, FormLabel, RadioGroup, Typography } from \"@material-ui/core\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport TabsTestCases from './TabsTestCases';\r\nimport Feedback from './Feedback'\r\nconst rtlTheme = createMuiTheme({direction: 'rtl', });\r\nexport {rtlTheme}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    \r\n    wrapper: {\r\n      margin: theme.spacing(1),\r\n      position: 'relative',\r\n    },\r\n    buttonSuccess: {\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n    // fabProgress: {\r\n    //   color: green[500],\r\n    //   position: 'absolute',\r\n    //   top: -6,\r\n    //   left: -6,\r\n    //   zIndex: 1,\r\n    // },\r\n    buttonProgress: {\r\n      color: green[500],\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginTop: -12,\r\n      marginLeft: -12,\r\n    },\r\n  }));\r\n\r\nexport default function ControlPanel({text,model,success,preds,loading,setText,fetchApi,setSuccess,setLoading, modelTabs}){\r\n\r\n    //style\r\n    const classes = useStyles()\r\n    const [helperText,setHelperText] = useState(\"Enter text in Arabic\");\r\n    const [inputError,setInputError] = useState(false);\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n      });\r\n\r\n    const handleInputChange = (text)=>{\r\n        setText(text)\r\n    }\r\n    const checkInputLength = ()=>{\r\n\r\n      if(inputError === true && text.length <=100){\r\n        setHelperText(\"Enter text in Arabic\")\r\n        setInputError(false);\r\n        return true;\r\n      }\r\n\r\n      if(text.length===0) return false;\r\n      if(text.length >= 100){\r\n        setHelperText(\"Text must be under 100 characters\")\r\n        setInputError(true);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    const handleButtonClick = () => {\r\n      if(!checkInputLength()){\r\n        return;\r\n      }\r\n          if (!loading) {\r\n            setSuccess(false);\r\n            setLoading(true);\r\n            fetchApi(model);\r\n            \r\n          }\r\n        };\r\n\r\n    const handleClickEvent = (e)=>{\r\n           if(e.code === \"Enter\" || e.code === \"NumpadEnter\"){\r\n             handleButtonClick();\r\n             e.preventDefault();\r\n    }\r\n  }\r\n    useEffect(() => {\r\n      window.addEventListener(\"keydown\",handleClickEvent);\r\n      return () => { \r\n        window.removeEventListener('keydown', handleClickEvent);\r\n      };\r\n  }, [handleClickEvent]);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(checkInputLength, 1000);\r\n        return () => clearTimeout(timeoutId);\r\n      }, [text]);\r\n      \r\n    return (\r\n         <Grid container direction=\"column\" justify=\"flex-end\" alignItems=\"stretch\" >\r\n            {/* <Grid item>\r\n              <FormControlLabelPlacement/>\r\n            </Grid> */}\r\n            \r\n            <Grid item >\r\n                <ThemeProvider theme={rtlTheme}>\r\n                <div dir=\"rtl\">\r\n                <TextField\r\n                    onChange={(e)=>{setText(e.target.value)}}\r\n                    value={text}\r\n                    label=\"Predict Region\"\r\n                    style={{width: \"auto\", display: \"block\"}}\r\n                    placeholder=\"اهلا وسهلا\"\r\n                    helperText={helperText}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    error={inputError}\r\n                />\r\n                </div>\r\n                </ThemeProvider>\r\n            </Grid>\r\n               \r\n              {success && <Feedback text={text} preds={preds} success={success}/> }\r\n               \r\n            {modelTabs}\r\n            <Grid item style={{marginBottom:'1rem',display:'flex',justifyContent:\"space-between\"}}  >\r\n                <Container className={classes.root} style={{justifyContent:\"center\"}}>\r\n                <div className={classes.wrapper}>\r\n                   <Button onClick={handleButtonClick} variant=\"contained\" color=\"primary\" disabled={loading}  className={buttonClassname}>\r\n                     Classify\r\n                    </Button>\r\n                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                </div>\r\n                </Container>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <TabsTestCases handleInputChange={handleInputChange} />\r\n            </Grid>\r\n           \r\n        </Grid>\r\n    )\r\n}\r\n\r\nfunction ValidationPrompt(){\r\n\r\n}\r\n\r\nfunction FormControlLabelPlacement() {\r\n  const labels = [\"EGY\", \"GLF\", \"IRQ\", \"LEV\", \"NOR\"]\r\n\r\n  return (\r\n    <FormControl variant=\"filled\">\r\n      <FormLabel id=\"validation-form-buttons\">Actual dialect</FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-form-control-label-placement\"\r\n        name=\"actual_dialect\"\r\n        // defaultValue=\"top\"\r\n        color=\"primary\"\r\n      >\r\n        {\r\n          labels.map(label => (\r\n          <FormControlLabel\r\n            value={label}\r\n            control={<Radio/>}\r\n            label={<h5 style={{color: \"grey\"}}>{label}</h5>}\r\n            key={label}\r\n          />\r\n          ))\r\n        }\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Divider, Paper, createMuiTheme,MuiThemeProvider,Container, Grid,Typography} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h4:{\r\n        fontFamily: [\r\n        'Oswald',\r\n        'roboto',\r\n        'sans-serif'\r\n        ].join(','),\r\n    },\r\n    //     h5:{\r\n    //     fontFamily: [\r\n\r\n    //     // 'monospace',\r\n    //     // 'roboto',\r\n    //     // 'sans-serif'\r\n    //     ].join(','),\r\n    // },\r\n\r\n}});\r\n\r\n\r\nexport default function Paragraphs() {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n\r\n        <Container>\r\n\r\n        \r\n        {/* <Paper > */}\r\n        <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2rem'}}>Summary</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    Using the <a href=\"https://aclanthology.org/W19-5607.pdf\">Social Media Arabic Dialect Corpus (SMADC)</a> dataset which classifies dialects to the five labels GLF, EGY, NOR (North Africa), LEV (Levantine) and IRQ, \r\n                    we built and fine-tuned a number of models. In this site, you can try out the best BERT model and the best Naive Bayes model. We fine-tuned many BERT models including <a href=\"https://github.com/aub-mind/arabert\">AraBERT</a>, <a href=\"https://github.com/mawdoo3/Multi-dialect-Arabic-BERT\">Multi-dialect-Arabic-BERT\r\n</a> and <a href=\"https://github.com/CAMeL-Lab/CAMeLBERT\">CAMeLBERT</a> models, and built traditional models using <a href=\"https://scikit-learn.org/\">Scikit-learn</a>.\r\n                    <br/>For more info read the research paper <a href=\"https://github.com/d7miiZ/Dialect-Graduation-Project/blob/main/research/Graduation_project.pdf\">here</a>.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container>\r\n\r\n        {/* <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2rem'}}>Paper</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    You can browse the research paper <a href=\"https://www.example.com\"> here</a>.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container>\r\n        \r\n       <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2.5rem'}}>Models</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n             \r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    We mainly fine-tuned <a href=\"https://github.com/aub-mind/arabert\">AraBERT</a> models.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container>\r\n\r\n        <Container >\r\n            <Typography  variant=\"h4\" align=\"left\" gutterBottom color=\"textPrimary\" style={{marginTop: '2.5rem'}}>Data</Typography> \r\n            <Divider orientation=\"horizontal\" style={{height:'2px'}}/>\r\n        <Grid container style={{marginTop: '1.2rem'}} justify=\"left\">\r\n            <Grid item > \r\n                <Typography variant=\"h5\" align=\"left\" paragraph color=\"textSecondary\" >\r\n                    Using the <a href=\"https://aclanthology.org/W19-5607.pdf\">Social Media Arabic Dialect Corpus (SMADC)</a> dataset which is distributed in the five labels (GLF, EGY, NOR, LEV and IRQ), \r\n                    we fine tuned a number of models, including a BERT model and a Naive Bayes model. \r\n                    We tested our model using a number of additional datasets, for more info read the paper linked above.\r\n                </Typography> \r\n            </Grid>\r\n        </Grid>\r\n       </Container> */}\r\n\r\n            {/* </Paper> */}\r\n\r\n        </Container>\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport {Paper,Tab,Tabs,makeStyles,createMuiTheme,MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n        h4:{\r\n        fontFamily: [\r\n        'oswald',\r\n        'roboto',\r\n        'sans-serif'\r\n        ].join(','),\r\n        fontSize:'2.5rem'\r\n    },\r\n}});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ModelsTabs({setModel,fetchApi}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(1);\r\n\r\n  // const handleClick = (n)=> {\r\n\r\n  // }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    setModel(newValue);\r\n    // fetchApi(newValue);\r\n\r\n  };\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n\r\n    <div className={classes.root}>\r\n       <Paper square>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        aria-label=\"Models options\"\r\n      >\r\n        <Tab label=\"BERT\" />\r\n        <Tab label=\"BAYES\"/>\r\n      </Tabs>\r\n    </Paper>\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Button,ListItem,ListItemText,SvgIcon} from '@material-ui/core';\r\n\r\nexport default function CreditItem({name,twt,gh,li}) {\r\n  return (\r\n\r\n                      <ListItem>\r\n                          <ListItemText primary={name}/>\r\n                          {gh!='none'\r\n                          &&\r\n          <Button color=\"inherit\" href={gh} target=\"_blank\" style={{maxWidth: '35px', maxHeight: '35px', minWidth: '35px', minHeight: '35px'}}>\r\n                  <GithubIcon fontSize='small' />\r\n          </Button>\r\n                          }\r\n\r\n          {\r\n              li!='none' &&\r\n          <Button color=\"inherit\" href={li} target=\"_blank\" style={{maxWidth: '35px', maxHeight: '35px', minWidth: '35px', minHeight: '35px'}}>\r\n              <LinkedInIcon fontSize='small' />\r\n          </Button>\r\n\r\n          }\r\n          {\r\n              twt!='none' &&\r\n          <Button color=\"inherit\" href={twt} target=\"_blank\" style={{maxWidth: '35px', maxHeight: '35', minWidth: '35px', minHeight: '35px'}}>\r\n              <TwitterIcon fontSize='small'/>\r\n          </Button>\r\n\r\n          }\r\n          </ListItem>\r\n\r\n  )\r\n}\r\n\r\n\r\n// Icons\r\nfunction GithubIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\nfunction LinkedInIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction TwitterIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\" />\r\n    </SvgIcon>\r\n  );\r\n}","import {Divider,Box,List,ListItem,ListItemText,makeStyles,SvgIcon,Button} from '@material-ui/core'\r\nimport CreditItem from './CreditItem';\r\nconst useStyle = makeStyles({\r\n    list:{\r\n        width:310,\r\n    }\r\n\r\n})\r\n// just Replace none with your link if you want to add your account\r\nexport default function DrawerContent(){\r\n    const classes = useStyle();\r\n    return (\r\n              <div className={classes.list}>\r\n                  <Box textAlign=\"center\" p={2}>\r\n                      <h5>Credits</h5>\r\n                  </Box>\r\n                  <Divider/>\r\n                  <List>\r\n                      <CreditItem name=\"Mohand Al-Rasheed\" twt=\"https://twitter.com/MohndAlrasheed\" gh=\"https://github.com/Hawzen\" li=\"https://www.linkedin.com/in/mohand-alrasheed/\"/>\r\n                      <CreditItem name=\"Abdulrahman Al-Shawi\" twt=\"none\" gh=\"https://github.com/d7miiZ\" li=\"https://www.linkedin.com/in/abdulrahman-alshawi-26b68b1a6/\"/>\r\n                      <CreditItem name=\"Musaad Al-Qubayl\" twt=\"https://twitter.com/Musaad0A\" gh=\"https://github.com/musaad0\" li=\"https://www.linkedin.com/in/musaadalqubayl/\"/>\r\n                      <CreditItem name=\"Khaled Al-Bader\" twt=\"none\" gh=\"https://github.com/khalid-albadr\" li=\"https://www.linkedin.com/in/khalid-albadr9\"/>\r\n                      <CreditItem name=\"Abdullah Al-Suwailem\" twt=\"https://twitter.com/abdullah_ssk10\" gh=\"https://github.com/Abdullah-Sw\" li=\"https://www.linkedin.com/in/abdullah-alsuwailem-4251741b4/\"/>\r\n                  </List>\r\n              </div>\r\n    )\r\n\r\n} \r\n\r\n\r\n","import {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport DrawerContent from './DrawerContent.js';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const [open,setOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"\"  style={{ background: 'transparent', boxShadow: 'none',}}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={()=>setOpen(true)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <SwipeableDrawer\r\n            anchor=\"left\"\r\n            open={open}\r\n            onClose={()=>{setOpen(false)}}\r\n            onOpen={()=>{setOpen(true)}}\r\n          >\r\n          <DrawerContent/>\r\n          </SwipeableDrawer>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          </Typography>\r\n\r\n          <Button color=\"inherit\" href=\"https://github.com/Hawzen/Dialect-Graduation-Project-Fullstack\" target=\"_blank\" >\r\n                  <GithubIcon/>\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n            <Divider orientation=\"horizontal\" variant=\"middle\" style={{height:'2px',background:'#8c8c8c'}}/>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n// Icons \r\nfunction GithubIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n    </SvgIcon>\r\n  );\r\n}","import $ from 'jquery'\r\nimport { \r\n    Grid, \r\n    StylesProvider, \r\n    jssPreset, \r\n    Container,\r\n    Typography\r\n } from \"@material-ui/core\";\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { useEffect, useState } from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport GlobePlot from \"./GlobePlot\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport Paragraphs from \"./Paragraphs\";\r\nimport ModelsTabs from \"./ModelsTabs\";\r\nimport Credits from \"./DrawerContent\"\r\nimport AppBar from './AppBar';\r\n\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\n\r\nexport default function Dialect(){\r\n    let [preds, setPreds] = useState({GLF: 0, EGY: 0, IRQ: 0, LEV: 0, NOR: 0})\r\n    let [model,setModel] = useState(1);\r\n    let [text,setText] = useState(\"\");\r\n    let [retryCount, setRetryCount] = useState(0);\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const maxRetryCount = 10;\r\n    \r\n    const bertApi = \"https://us-central1-dialect-project-328413.cloudfunctions.net/dialect-prediction-BERT-V2\"\r\n    const bayesApi = \"https://us-central1-dialect-project-328413.cloudfunctions.net/dialect-prediction-naive-bayes\"\r\n\r\n    const fetchApi = (n) =>{\r\n        setModel(n);\r\n        if(text.length===0) return\r\n\r\n        const modelsArr = [bertApi,bayesApi]\r\n        $.ajax(\r\n            {\r\n                type: \"POST\",\r\n                url: modelsArr[n],\r\n                data: JSON.stringify({\"text\" : text}),\r\n                dataType:'json',\r\n                success: function (response) {\r\n                    setSuccess(true);\r\n                    setLoading(false);\r\n                    // In backend: `id2label = {0 : \"EGY\", 1 : \"GLF\", 2 : \"IRQ\", 3 : \"LEV\", 4 : \"NOR\"}`\r\n                    setPreds({GLF: response[1], EGY: response[0], IRQ: response[2], LEV: response[3], NOR: response[4]})\r\n                    },\r\n                error: function (err) {\r\n                    console.log(err);\r\n                    if(retryCount < maxRetryCount){\r\n                        setRetryCount(retryCount + 1);\r\n                        return fetchApi(n);\r\n                    }\r\n                    else\r\n                        window.location.reload();\r\n                },\r\n            });\r\n    }\r\n\r\n    // useEffect(() => { // Wake up BERT\r\n    //     let n = 0;\r\n    //     setModel(n);\r\n\r\n    //     const modelsArr = [bertApi]\r\n    //     $.ajax(\r\n    //         {\r\n    //             type: \"POST\",\r\n    //             url: modelsArr[n],\r\n    //             data: JSON.stringify({\"text\" : \"..You're still half-asleep, aren't you?\"}),\r\n    //             dataType:'json',\r\n    //             error: function (err) {\r\n    //                 console.log(err);\r\n    //             },\r\n    //         });\r\n    // }, [])\r\n\r\n    return (\r\n\r\n          <StylesProvider jss={jss}>\r\n            {/* alignItems=\"stretch\" */}\r\n        <Container fixed>\r\n        <Grid container direction=\"column\" style={{flexWrap:\"nowrap\"}} >\r\n            <Grid Item>\r\n                <AppBar/>\r\n            </Grid>\r\n\r\n            <Grid Item>\r\n                <Welcome/>\r\n            </Grid>\r\n\r\n            <Grid Item>\r\n                <Paragraphs/>\r\n            </Grid>\r\n            \r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom color=\"textPrimary\" style={{marginTop: '60px'}}>\r\n                LIVE DEMO\r\n            </Typography> \r\n            \r\n            <Grid item style={{margin: \"auto\", marginTop: \"0.9rem\"}}>\r\n                <GlobePlot preds={preds}/>\r\n            </Grid>\r\n            \r\n            <Grid item>\r\n                <ControlPanel model={model} \r\n                text={text} \r\n                success={success} \r\n                loading={loading} \r\n                preds={preds}\r\n                fetchApi={fetchApi} \r\n                setText={setText} \r\n    \r\n                setSuccess={setSuccess} \r\n                setLoading={setLoading} \r\n                modelTabs={<ModelsTabs setModel={setModel} fetchApi={fetchApi} />}\r\n            />\r\n            </Grid>\r\n\r\n\r\n            <div style={{padding: \"2em\"}}/> {/* Footer */}\r\n\r\n\r\n        </Grid>\r\n        </Container>\r\n        </StylesProvider>\r\n\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}